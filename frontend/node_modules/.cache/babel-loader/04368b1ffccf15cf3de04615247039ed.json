{"ast":null,"code":"var _jsxFileName = \"/home/samael/server/test/frontend/src/provider/utils/auth.context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/React.createContext();\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case 'set':\n      {\n        const demoDataToSave = JSON.stringify({\n          email: action.userData.email,\n          password: action.userData.password\n        });\n        localStorage.setItem(\"demoUserData\", demoDataToSave);\n        localStorage.setItem(\"userToken\", action.userData.token);\n        return {\n          email: action.userData.email,\n          password: action.userData.password\n        };\n      }\n\n    case 'delete':\n      {\n        localStorage.removeItem(\"demoUserData\");\n        localStorage.removeItem(\"userToken\");\n        return {\n          email: undefined,\n          password: undefined\n        };\n      }\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}\n\nfunction UserProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const demoSavedData = localStorage.getItem(\"demoUserData\");\n  const token = localStorage.getItem(\"userToken\");\n  const {\n    email,\n    password\n  } = !token ? {\n    email: undefined,\n    password: undefined\n  } : JSON.parse(demoSavedData);\n  const userData = {\n    email: email,\n    password: password\n  };\n  const [state, dispatch] = React.useReducer(userReducer, userData);\n  const value = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n}\n\n_s(UserProvider, \"wH/xswnhXvetfm5ETej28OfaEM0=\");\n\n_c = UserProvider;\n\nfunction useUserData() {\n  _s2();\n\n  const context = React.useContext(UserContext);\n\n  if (context === undefined) {\n    throw new Error('useUserData must be used within a userProvider');\n  }\n\n  return context;\n}\n\n_s2(useUserData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { UserProvider, useUserData };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","UserContext","createContext","userReducer","state","action","type","demoDataToSave","JSON","stringify","email","userData","password","localStorage","setItem","token","removeItem","undefined","Error","UserProvider","children","demoSavedData","getItem","parse","dispatch","useReducer","value","useUserData","context","useContext"],"sources":["/home/samael/server/test/frontend/src/provider/utils/auth.context.js"],"sourcesContent":["import React from 'react';\n\nconst UserContext = React.createContext();\n\n\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case 'set': {\n      const demoDataToSave = JSON.stringify({email:action.userData.email,password:action.userData.password})\n      localStorage.setItem(\"demoUserData\",demoDataToSave)\n      localStorage.setItem(\"userToken\",action.userData.token)\n      return {email:action.userData.email,password:action.userData.password}\n    }\n    case 'delete': {\n      localStorage.removeItem(\"demoUserData\")\n      localStorage.removeItem(\"userToken\")\n      return {email:undefined,password:undefined}\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`)\n    }\n  }\n}\n\nfunction UserProvider({children}) {\n  const demoSavedData = localStorage.getItem(\"demoUserData\") \n  const token = localStorage.getItem(\"userToken\") \n\n  const {email,password} = !token ? {email:undefined,password:undefined} : JSON.parse(demoSavedData)\n  const userData = {email:email,password:password}\n\n  const [state, dispatch] = React.useReducer(userReducer, userData)\n\n  const value = {state, dispatch}\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>\n}\n\nfunction useUserData() {\n  const context = React.useContext(UserContext)\n  if (context === undefined) {\n    throw new Error('useUserData must be used within a userProvider')\n  }\n  return context\n}\n\nexport {UserProvider, useUserData}"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,gBAAGD,KAAK,CAACE,aAAN,EAApB;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;EAClC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,KAAL;MAAY;QACV,MAAMC,cAAc,GAAGC,IAAI,CAACC,SAAL,CAAe;UAACC,KAAK,EAACL,MAAM,CAACM,QAAP,CAAgBD,KAAvB;UAA6BE,QAAQ,EAACP,MAAM,CAACM,QAAP,CAAgBC;QAAtD,CAAf,CAAvB;QACAC,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAoCP,cAApC;QACAM,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCT,MAAM,CAACM,QAAP,CAAgBI,KAAjD;QACA,OAAO;UAACL,KAAK,EAACL,MAAM,CAACM,QAAP,CAAgBD,KAAvB;UAA6BE,QAAQ,EAACP,MAAM,CAACM,QAAP,CAAgBC;QAAtD,CAAP;MACD;;IACD,KAAK,QAAL;MAAe;QACbC,YAAY,CAACG,UAAb,CAAwB,cAAxB;QACAH,YAAY,CAACG,UAAb,CAAwB,WAAxB;QACA,OAAO;UAACN,KAAK,EAACO,SAAP;UAAiBL,QAAQ,EAACK;QAA1B,CAAP;MACD;;IACD;MAAS;QACP,MAAM,IAAIC,KAAJ,CAAW,0BAAyBb,MAAM,CAACC,IAAK,EAAhD,CAAN;MACD;EAdH;AAgBD;;AAED,SAASa,YAAT,OAAkC;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EAChC,MAAMC,aAAa,GAAGR,YAAY,CAACS,OAAb,CAAqB,cAArB,CAAtB;EACA,MAAMP,KAAK,GAAGF,YAAY,CAACS,OAAb,CAAqB,WAArB,CAAd;EAEA,MAAM;IAACZ,KAAD;IAAOE;EAAP,IAAmB,CAACG,KAAD,GAAS;IAACL,KAAK,EAACO,SAAP;IAAiBL,QAAQ,EAACK;EAA1B,CAAT,GAAgDT,IAAI,CAACe,KAAL,CAAWF,aAAX,CAAzE;EACA,MAAMV,QAAQ,GAAG;IAACD,KAAK,EAACA,KAAP;IAAaE,QAAQ,EAACA;EAAtB,CAAjB;EAEA,MAAM,CAACR,KAAD,EAAQoB,QAAR,IAAoBxB,KAAK,CAACyB,UAAN,CAAiBtB,WAAjB,EAA8BQ,QAA9B,CAA1B;EAEA,MAAMe,KAAK,GAAG;IAACtB,KAAD;IAAQoB;EAAR,CAAd;EACA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEE,KAA7B;IAAA,UAAqCN;EAArC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;GAXQD,Y;;KAAAA,Y;;AAaT,SAASQ,WAAT,GAAuB;EAAA;;EACrB,MAAMC,OAAO,GAAG5B,KAAK,CAAC6B,UAAN,CAAiB5B,WAAjB,CAAhB;;EACA,IAAI2B,OAAO,KAAKX,SAAhB,EAA2B;IACzB,MAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;EACD;;EACD,OAAOU,OAAP;AACD;;IANQD,W;;AAQT,SAAQR,YAAR,EAAsBQ,WAAtB"},"metadata":{},"sourceType":"module"}