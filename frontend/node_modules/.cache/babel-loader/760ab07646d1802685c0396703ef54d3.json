{"ast":null,"code":"var _jsxFileName = \"/home/samael/server/test/frontend/src/provider/components/FormLogin/formlogin.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useFormik } from \"formik\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Button } from \"primereact/button\";\nimport { Password } from \"primereact/password\";\nimport { classNames } from \"primereact/utils\";\nimport { Toast } from \"primereact/toast\";\nimport \"./FormDemo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = _ref => {\n  _s();\n\n  let {\n    action,\n    error\n  } = _ref;\n  const [, setShowMessage] = useState(false);\n  const [, setFormData] = useState({});\n  const toast = useRef(null);\n\n  const showError = error => {\n    toast.current.show({\n      severity: \"error\",\n      summary: \"Error Message\",\n      detail: error,\n      life: 3000\n    });\n  };\n\n  if (error) {\n    showError(error);\n    window.location.reload(true);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validate: data => {\n      let errors = {};\n\n      if (!data.email) {\n        errors.email = \"Mail is required.\";\n      }\n\n      if (!data.password) {\n        errors.password = \"Password is required.\";\n      }\n\n      return errors;\n    },\n    onSubmit: data => {\n      setFormData(data);\n      action(data);\n      setShowMessage(true);\n      formik.resetForm();\n    }\n  });\n\n  const isFormFieldValid = name => !!(formik.touched[name] && formik.errors[name]);\n\n  const getFormErrorMessage = name => {\n    return isFormFieldValid(name) && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"p-error\",\n      children: formik.errors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-demo\",\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          className: \"p-fluid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-float-label\",\n              children: [/*#__PURE__*/_jsxDEV(InputText, {\n                id: \"email\",\n                name: \"email\",\n                value: formik.values.email,\n                onChange: formik.handleChange,\n                autoFocus: true,\n                className: classNames({\n                  \"p-invalid\": isFormFieldValid(\"email\")\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: classNames({\n                  \"p-error\": isFormFieldValid(\"email\")\n                }),\n                children: \"Nombre*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), getFormErrorMessage(\"email\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-float-label\",\n              children: [/*#__PURE__*/_jsxDEV(Password, {\n                id: \"password\",\n                name: \"password\",\n                value: formik.values.password,\n                onChange: formik.handleChange,\n                className: classNames({\n                  \"p-invalid\": isFormFieldValid(\"password\")\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: classNames({\n                  \"p-error\": isFormFieldValid(\"password\")\n                }),\n                children: \"Contrase\\xF1a*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), getFormErrorMessage(\"password\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            label: \"Acceder\",\n            className: \"mt-2 p-button-warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"wxtIYBugPP1Zjh75oRF9ARbTVEw=\", false, function () {\n  return [useFormik];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useRef","useFormik","InputText","Button","Password","classNames","Toast","Form","action","error","setShowMessage","setFormData","toast","showError","current","show","severity","summary","detail","life","window","location","reload","formik","initialValues","email","password","validate","data","errors","onSubmit","resetForm","isFormFieldValid","name","touched","getFormErrorMessage","handleSubmit","values","handleChange"],"sources":["/home/samael/server/test/frontend/src/provider/components/FormLogin/formlogin.component.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useFormik } from \"formik\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Button } from \"primereact/button\";\nimport { Password } from \"primereact/password\";\nimport { classNames } from \"primereact/utils\";\nimport { Toast } from \"primereact/toast\";\n\nimport \"./FormDemo.css\";\n\n\nexport const Form = ({ action, error }) => {\n  const [ , setShowMessage] = useState(false);\n  const [ , setFormData] = useState({});\n\n  const toast = useRef(null);\n\n\n  const showError = (error) => {\n    toast.current.show({\n      severity: \"error\",\n      summary: \"Error Message\",\n      detail: error,\n      life: 3000,\n    });\n  };\n\n  if (error) {\n    showError(error);\n    window.location.reload(true);\n\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validate: (data) => {\n      let errors = {};\n\n      if (!data.email) {\n        errors.email = \"Mail is required.\";\n      }\n\n      if (!data.password) {\n        errors.password = \"Password is required.\";\n      }\n\n      return errors;\n    },\n    onSubmit: (data) => {\n      setFormData(data);\n      action(data);\n      setShowMessage(true);\n\n      formik.resetForm();\n    },\n  });\n\n  const isFormFieldValid = (name) =>\n    !!(formik.touched[name] && formik.errors[name]);\n  const getFormErrorMessage = (name) => {\n    return (\n      isFormFieldValid(name) && (\n        <small className=\"p-error\">{formik.errors[name]}</small>\n      )\n    );\n  };\n\n  return (\n    <div className=\"form-demo\">\n      <Toast ref={toast} />\n      <div className=\"flex justify-content-center\">\n        <div className=\"card\">\n          <h2 className=\"text-center\">Login</h2>\n          <form onSubmit={formik.handleSubmit} className=\"p-fluid\">\n            <div className=\"field\">\n              <span className=\"p-float-label\">\n                <InputText\n                  id=\"email\"\n                  name=\"email\"\n                  value={formik.values.email}\n                  onChange={formik.handleChange}\n                  autoFocus\n                  className={classNames({\n                    \"p-invalid\": isFormFieldValid(\"email\"),\n                  })}\n                />\n                <label\n                  htmlFor=\"email\"\n                  className={classNames({\n                    \"p-error\": isFormFieldValid(\"email\"),\n                  })}\n                >\n                  Nombre*\n                </label>\n              </span>\n              {getFormErrorMessage(\"email\")}\n            </div>\n            <div className=\"field\">\n              <span className=\"p-float-label\">\n                <Password\n                  id=\"password\"\n                  name=\"password\"\n                  value={formik.values.password}\n                  onChange={formik.handleChange}\n                  className={classNames({\n                    \"p-invalid\": isFormFieldValid(\"password\"),\n                  })}\n                />\n                <label\n                  htmlFor=\"password\"\n                  className={classNames({\n                    \"p-error\": isFormFieldValid(\"password\"),\n                  })}\n                >\n                  Contraseña*\n                </label>\n              </span>\n              {getFormErrorMessage(\"password\")}\n            </div>\n\n            <Button\n              type=\"submit\"\n              label=\"Acceder\"\n              className=\"mt-2 p-button-warning\"\n            />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}