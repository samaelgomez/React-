{"ast":null,"code":"import { fakeBackend } from \"./agent/fakeBackend\";\nimport Queries from \"./queries/queries\";\n\nasync function apiAgent() {\n  let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Opciones por defecto estan marcadas con un *\n  const response = await fetch(url, {\n    method: 'GET',\n    // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors',\n    // no-cors, *cors, same-origin\n    cache: 'no-cache',\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin',\n    // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: 'follow',\n    // manual, *follow, error\n    referrerPolicy: 'no-referrer' // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\nconst Productor = async props => {\n  const {\n    query,\n    data\n  } = props;\n  const url = Queries[query];\n  const result = await apiAgent(url);\n  if (result.error) throw result.errorMsg;\n  return result;\n};\n\n_c = Productor;\nexport default Productor;\n/* const agent ={\n    query: (variables,query) =>{\n        return client.query({\n          query: query,\n          fetchPolicy: 'network-only',\n          variables: variables,\n        })\n    },\n    mutation: (variables,query) =>{\n      return client.mutate({\n        mutation: query,\n        variables: variables,\n      })\n    },\n  } */\n\nvar _c;\n\n$RefreshReg$(_c, \"Productor\");","map":{"version":3,"names":["fakeBackend","Queries","apiAgent","url","data","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","json","Productor","props","query","result","error","errorMsg"],"sources":["/home/samael/server/test/frontend/src/core/productor/fetch/fetch.productor.js"],"sourcesContent":["import { fakeBackend } from \"./agent/fakeBackend\";\nimport Queries from \"./queries/queries\"\n\n\nasync function apiAgent(url = '', data = {}) {\n  // Opciones por defecto estan marcadas con un *\n  const response = await fetch(url, {\n    method: 'GET', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\nconst Productor = async (props) =>{\n    const {query,data} = props\n    const url = Queries[query]\n\n    const result = await apiAgent(url)\n    if(result.error) throw result.errorMsg\n    return result\n}\n\nexport default Productor\n\n/* const agent ={\n    query: (variables,query) =>{\n        return client.query({\n          query: query,\n          fetchPolicy: 'network-only',\n          variables: variables,\n        })\n    },\n    mutation: (variables,query) =>{\n      return client.mutate({\n        mutation: query,\n        variables: variables,\n      })\n    },\n  } */\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,qBAA5B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAGA,eAAeC,QAAf,GAA6C;EAAA,IAArBC,GAAqB,uEAAf,EAAe;EAAA,IAAXC,IAAW,uEAAJ,EAAI;EAC3C;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;IAChCI,MAAM,EAAE,KADwB;IACjB;IACfC,IAAI,EAAE,MAF0B;IAElB;IACdC,KAAK,EAAE,UAHyB;IAGb;IACnBC,WAAW,EAAE,aAJmB;IAIJ;IAC5BC,OAAO,EAAE;MACP,gBAAgB,kBADT,CAEP;;IAFO,CALuB;IAShCC,QAAQ,EAAE,QATsB;IASZ;IACpBC,cAAc,EAAE,aAVgB,CAUD;IAC/B;;EAXgC,CAAN,CAA5B;EAaA,OAAOR,QAAQ,CAACS,IAAT,EAAP,CAf2C,CAenB;AACzB;;AAED,MAAMC,SAAS,GAAG,MAAOC,KAAP,IAAgB;EAC9B,MAAM;IAACC,KAAD;IAAOb;EAAP,IAAeY,KAArB;EACA,MAAMb,GAAG,GAAGF,OAAO,CAACgB,KAAD,CAAnB;EAEA,MAAMC,MAAM,GAAG,MAAMhB,QAAQ,CAACC,GAAD,CAA7B;EACA,IAAGe,MAAM,CAACC,KAAV,EAAiB,MAAMD,MAAM,CAACE,QAAb;EACjB,OAAOF,MAAP;AACH,CAPD;;KAAMH,S;AASN,eAAeA,SAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}