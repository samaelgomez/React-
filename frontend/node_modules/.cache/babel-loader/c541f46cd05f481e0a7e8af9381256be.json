{"ast":null,"code":"import { MovieQueryModel } from \"../model/queryModels\";\nimport Productor from \"../productor/fetch/fetch.productor\";\nimport { ValidateTask } from \"../utils/validations.utils\";\nconst MovieConsumer = {\n  GetAllMovies: () => {\n    return new Promise((resolve, reject) => {\n      try {\n        const result = Productor({\n          query: MovieQueryModel.GET_ALL_MOVIES\n        });\n        console.log({\n          from: \"GetAllMovies\",\n          result: result\n        });\n        resolve(result);\n      } catch (error) {\n        resolve({\n          error: true,\n          errorMsg: error\n        });\n      }\n    });\n  },\n  CreateMovie: movieProps => {\n    return new Promise((resolve, reject) => {\n      try {\n        console.log(movieProps); // const result = Productor({type:\"POST\",query:MovieQueryModel.CREATE_MOVIE,data:movieProps})\n\n        console.log({\n          from: \"CreateMovie\",\n          result: \"result\"\n        });\n        resolve(\"result\");\n      } catch (error) {\n        resolve({\n          error: true,\n          errorMsg: error\n        });\n      }\n    });\n  }\n};\nexport default MovieConsumer;","map":{"version":3,"names":["MovieQueryModel","Productor","ValidateTask","MovieConsumer","GetAllMovies","Promise","resolve","reject","result","query","GET_ALL_MOVIES","console","log","from","error","errorMsg","CreateMovie","movieProps"],"sources":["/home/samael/server/test/frontend/src/core/consumer/movies.consumer.js"],"sourcesContent":["import { MovieQueryModel } from \"../model/queryModels\"\nimport Productor from \"../productor/fetch/fetch.productor\"\nimport {ValidateTask} from \"../utils/validations.utils\"\n\nconst MovieConsumer = {\n    GetAllMovies: () =>{\n        return new Promise((resolve,reject)=>{\n            try {\n                const result = Productor({query:MovieQueryModel.GET_ALL_MOVIES})\n                console.log({from:\"GetAllMovies\",result:result});\n                resolve(result)\n            } catch (error) {\n                resolve({error:true, errorMsg:error})\n            }\n       })\n    },\n    CreateMovie: (movieProps) =>{\n        return new Promise((resolve,reject)=>{\n            try {\n                console.log(movieProps);\n                // const result = Productor({type:\"POST\",query:MovieQueryModel.CREATE_MOVIE,data:movieProps})\n                console.log({from:\"CreateMovie\",result:\"result\"});\n                resolve(\"result\")\n            } catch (error) {\n                resolve({error:true, errorMsg:error})\n            }\n       })\n    }\n}\n\n\n\nexport default MovieConsumer "],"mappings":"AAAA,SAASA,eAAT,QAAgC,sBAAhC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAAQC,YAAR,QAA2B,4BAA3B;AAEA,MAAMC,aAAa,GAAG;EAClBC,YAAY,EAAE,MAAK;IACf,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;MACjC,IAAI;QACA,MAAMC,MAAM,GAAGP,SAAS,CAAC;UAACQ,KAAK,EAACT,eAAe,CAACU;QAAvB,CAAD,CAAxB;QACAC,OAAO,CAACC,GAAR,CAAY;UAACC,IAAI,EAAC,cAAN;UAAqBL,MAAM,EAACA;QAA5B,CAAZ;QACAF,OAAO,CAACE,MAAD,CAAP;MACH,CAJD,CAIE,OAAOM,KAAP,EAAc;QACZR,OAAO,CAAC;UAACQ,KAAK,EAAC,IAAP;UAAaC,QAAQ,EAACD;QAAtB,CAAD,CAAP;MACH;IACL,CARO,CAAP;EASH,CAXiB;EAYlBE,WAAW,EAAGC,UAAD,IAAe;IACxB,OAAO,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;MACjC,IAAI;QACAI,OAAO,CAACC,GAAR,CAAYK,UAAZ,EADA,CAEA;;QACAN,OAAO,CAACC,GAAR,CAAY;UAACC,IAAI,EAAC,aAAN;UAAoBL,MAAM,EAAC;QAA3B,CAAZ;QACAF,OAAO,CAAC,QAAD,CAAP;MACH,CALD,CAKE,OAAOQ,KAAP,EAAc;QACZR,OAAO,CAAC;UAACQ,KAAK,EAAC,IAAP;UAAaC,QAAQ,EAACD;QAAtB,CAAD,CAAP;MACH;IACL,CATO,CAAP;EAUH;AAvBiB,CAAtB;AA4BA,eAAeX,aAAf"},"metadata":{},"sourceType":"module"}